!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DDL	dlinkedlist.h	/^typedef struct DDL{$/;"	s
DDL	dlinkedlist.h	/^}DDL;$/;"	t	typeref:struct:DDL
DDL	l1.h	/^typedef struct DDL{$/;"	s
DDL	l1.h	/^}DDL;$/;"	t	typeref:struct:DDL
d	dlinkedlist.h	/^    int d;$/;"	m	struct:node
d	l1.h	/^    int d;$/;"	m	struct:node
display	dlinkedlist.c	/^void display(DDL l) {$/;"	f
displayLR	l1.c	/^void displayLR(DDL l) {$/;"	f
displayRL	l1.c	/^void displayRL(DDL l) {$/;"	f
find_length	dlinkedlist.c	/^int find_length(DDL l) {$/;"	f
find_length	l1.c	/^int find_length(DDL l) {$/;"	f
front	dlinkedlist.h	/^    struct node *front, *rear;$/;"	m	struct:DDL	typeref:struct:DDL::node
front	l1.h	/^    struct node *front, *rear;$/;"	m	struct:DDL	typeref:struct:DDL::node
init	dlinkedlist.c	/^void init(DDL *l) {$/;"	f
init	l1.c	/^void init(DDL *l) {$/;"	f
insert_beg	l1.c	/^void insert_beg(DDL *l, int data) {$/;"	f
insert_end	l1.c	/^void insert_end(DDL *l, int data) {$/;"	f
insert_pos	l1.c	/^void insert_pos(DDL *l, int pos, int data) {$/;"	f
insert_using_front_end	dlinkedlist.c	/^void insert_using_front_end(DDL *l, int data) {$/;"	f
insert_using_rear_end	dlinkedlist.c	/^void insert_using_rear_end(DDL *l, int data) {$/;"	f
isEmpty	dlinkedlist.c	/^int isEmpty(DDL l) {$/;"	f
isEmpty	l1.c	/^int isEmpty(DDL l) {$/;"	f
main	main.c	/^int main() {$/;"	f
main	main1.c	/^int main() {$/;"	f
next	dlinkedlist.h	/^    struct node *next, *previous;$/;"	m	struct:node	typeref:struct:node::node
next	l1.h	/^    struct node *next, *previous;$/;"	m	struct:node	typeref:struct:node::node
node	dlinkedlist.h	/^typedef struct node{$/;"	s
node	dlinkedlist.h	/^}node;$/;"	t	typeref:struct:node
node	l1.h	/^typedef struct node{$/;"	s
node	l1.h	/^}node;$/;"	t	typeref:struct:node
previous	dlinkedlist.h	/^    struct node *next, *previous;$/;"	m	struct:node	typeref:struct:node::
previous	l1.h	/^    struct node *next, *previous;$/;"	m	struct:node	typeref:struct:node::
rear	dlinkedlist.h	/^    struct node *front, *rear;$/;"	m	struct:DDL	typeref:struct:DDL::
rear	l1.h	/^    struct node *front, *rear;$/;"	m	struct:DDL	typeref:struct:DDL::
reverse_display	dlinkedlist.c	/^void reverse_display(DDL l) {$/;"	f
search	dlinkedlist.c	/^int search(DDL l, int key) {$/;"	f
